{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started Jam is an interface for JoinMarket 1 , a special kind of bitcoin software that focuses on privacy and security. The goal of Jam is to make it easier to improve the financial privacy of yourself and others. Warning Both Jam and its documentation are a work in progress. We are writing these docs as we progress, out in the open. If you want to help, please do! Contributing Before You Start Before you get going with Jam you should understand the \"why\" behind it all. Motivation Privacy Fundamentals As mentioned above, Jam uses JoinMarket under the hood. What sets JoinMarket apart is that it has no single point of failure. It is completely peer-to-peer, there is no central coordinator, no \"doxxic change\", no company behind it all, no marketing department, and no central entity making any money off of it. All development is done by volunteers. Consequently, please heed the following warning: Danger Jam is considered beta software. While JoinMarket is tried and tested, Jam is new and things might break. Use with caution. Please report any issues directly on GitHub . Installation The easiest way to install Jam is via one of the full-node software solutions that includes Jam as an app or plug-in. You can also install it manually yourself. Installation First Use Once installed, you will have to add some funds to Jam to get going. If you are new to JoinMarket in general and Jam in particular, you might want to have a look at the \"cheat sheet.\" Cheat Sheet Getting Help Since there is no company or fixed team behind Jam or JoinMarket, your best bet to get help are public chat groups and public forums. Also make sure to have a look at the FAQ to get answers to frequently asked questions. FAQ GitHub Issues Community Chat Jam and JoinMarket are separate projects. For more information on JoinMarket, see the JoinMarket GitHub Page \u21a9","title":"Getting Started"},{"location":"#getting-started","text":"Jam is an interface for JoinMarket 1 , a special kind of bitcoin software that focuses on privacy and security. The goal of Jam is to make it easier to improve the financial privacy of yourself and others. Warning Both Jam and its documentation are a work in progress. We are writing these docs as we progress, out in the open. If you want to help, please do! Contributing","title":"Getting Started"},{"location":"#before-you-start","text":"Before you get going with Jam you should understand the \"why\" behind it all. Motivation Privacy Fundamentals As mentioned above, Jam uses JoinMarket under the hood. What sets JoinMarket apart is that it has no single point of failure. It is completely peer-to-peer, there is no central coordinator, no \"doxxic change\", no company behind it all, no marketing department, and no central entity making any money off of it. All development is done by volunteers. Consequently, please heed the following warning: Danger Jam is considered beta software. While JoinMarket is tried and tested, Jam is new and things might break. Use with caution. Please report any issues directly on GitHub .","title":"Before You Start"},{"location":"#installation","text":"The easiest way to install Jam is via one of the full-node software solutions that includes Jam as an app or plug-in. You can also install it manually yourself. Installation","title":"Installation"},{"location":"#first-use","text":"Once installed, you will have to add some funds to Jam to get going. If you are new to JoinMarket in general and Jam in particular, you might want to have a look at the \"cheat sheet.\" Cheat Sheet","title":"First Use"},{"location":"#getting-help","text":"Since there is no company or fixed team behind Jam or JoinMarket, your best bet to get help are public chat groups and public forums. Also make sure to have a look at the FAQ to get answers to frequently asked questions. FAQ GitHub Issues Community Chat Jam and JoinMarket are separate projects. For more information on JoinMarket, see the JoinMarket GitHub Page \u21a9","title":"Getting Help"},{"location":"FAQ/","text":"FAQ Have a question that is not listed here? Let us know! Contributing Frequently Asked Questions This FAQ compiles questions that relate to Jam in particular. For things related to JoinMarket in general, please refer to the JoinMarket documentation . How much can I earn? Earning sats entails providing liquidity to other market participants. Consequently, how much you can earn depends on multiple factors, market conditions and liquidity size being two of them. In general, the more liquidity you provide, the more you can earn. That being said, you are competing in an open market, and because competition is global and only constraint by market forces, the margin is usually thin. If your offers are not taken by market participants, your offer might be too expensive. Check the order book and compare your offer to the market price. If your offer is competitive and is still ignored, make sure to create a Fidelity Bond , which signals that you are a serious market participant and not a malicious entity. See also \" a few words about incentives \" from the JoinMarket documentation. How high are the fees that I do have to pay? The amount of fees you have to pay depends on market and blockspace conditions. They are dictated by supply and demand, both for collaborative transactions and onchain tranactions in general. Market makers provide liquidity and set the fee they want to earn, either in absolute or percentage terms. Market takers have to agree to take these offers voluntarily. Check the orderbook to get an up-to-date overview of the current fee market. In addition to these fees, you will have to pay mining fees. Mining fees depend on how many transactions are currently in the mempool . Inspect your mempool or use a public site like mempool.space to do a fee estimation. Hint We highly recommended that you run your own mempool.space instance on your full node. See also \" a note on fees \" from the JoinMarket documentation. I'm getting an error when trying to open the wallet The following error can pop up in case JoinMarket didnt't shut down cleanly: wallet.jmdat cannot be created/opened, it is locked. Warning Make sure that you have written down your wallet seed before executing any command You can resolve this by manually deleting the wallet .lock file as explained in issue #173 . Something is/seems stuck; what can I do? TODO (hint: service feedback not yet provided; it's always safe to cancel operations; no loss of funds) No connection to gateway TODO (hint: check service is running; check ports are open) can also be reverse proxy issues; reverse proxy is still mandatory (this is a pain point for me.. we need to get rid of it) don't know if we should go into details why it is needed or what the differences are","title":"FAQ"},{"location":"FAQ/#faq","text":"Have a question that is not listed here? Let us know! Contributing","title":"FAQ"},{"location":"FAQ/#frequently-asked-questions","text":"This FAQ compiles questions that relate to Jam in particular. For things related to JoinMarket in general, please refer to the JoinMarket documentation .","title":"Frequently Asked Questions"},{"location":"FAQ/#how-much-can-i-earn","text":"Earning sats entails providing liquidity to other market participants. Consequently, how much you can earn depends on multiple factors, market conditions and liquidity size being two of them. In general, the more liquidity you provide, the more you can earn. That being said, you are competing in an open market, and because competition is global and only constraint by market forces, the margin is usually thin. If your offers are not taken by market participants, your offer might be too expensive. Check the order book and compare your offer to the market price. If your offer is competitive and is still ignored, make sure to create a Fidelity Bond , which signals that you are a serious market participant and not a malicious entity. See also \" a few words about incentives \" from the JoinMarket documentation.","title":"How much can I earn?"},{"location":"FAQ/#how-high-are-the-fees-that-i-do-have-to-pay","text":"The amount of fees you have to pay depends on market and blockspace conditions. They are dictated by supply and demand, both for collaborative transactions and onchain tranactions in general. Market makers provide liquidity and set the fee they want to earn, either in absolute or percentage terms. Market takers have to agree to take these offers voluntarily. Check the orderbook to get an up-to-date overview of the current fee market. In addition to these fees, you will have to pay mining fees. Mining fees depend on how many transactions are currently in the mempool . Inspect your mempool or use a public site like mempool.space to do a fee estimation. Hint We highly recommended that you run your own mempool.space instance on your full node. See also \" a note on fees \" from the JoinMarket documentation.","title":"How high are the fees that I do have to pay?"},{"location":"FAQ/#im-getting-an-error-when-trying-to-open-the-wallet","text":"The following error can pop up in case JoinMarket didnt't shut down cleanly: wallet.jmdat cannot be created/opened, it is locked. Warning Make sure that you have written down your wallet seed before executing any command You can resolve this by manually deleting the wallet .lock file as explained in issue #173 .","title":"I'm getting an error when trying to open the wallet"},{"location":"FAQ/#something-isseems-stuck-what-can-i-do","text":"TODO (hint: service feedback not yet provided; it's always safe to cancel operations; no loss of funds)","title":"Something is/seems stuck; what can I do?"},{"location":"FAQ/#no-connection-to-gateway","text":"TODO (hint: check service is running; check ports are open) can also be reverse proxy issues; reverse proxy is still mandatory (this is a pain point for me.. we need to get rid of it) don't know if we should go into details why it is needed or what the differences are","title":"No connection to gateway"},{"location":"about/","text":"About Jam is a free and open-source project that aims to improve the financial privacy of yourself and others, without relying on a trusted third party. It was started in 2021 by various volunteers and is still developed and maintained on a volunteer basis. Jam is a front-end for JoinMarket , a privacy-focused bitcoin software that uses a peer-to-peer marketplace to facilitate collaborative transactions. The name \"Jam\" is a backronym, stands for JoinMarket's Awesome, Man , and shouldn't be taken too seriously.","title":"About"},{"location":"about/#about","text":"Jam is a free and open-source project that aims to improve the financial privacy of yourself and others, without relying on a trusted third party. It was started in 2021 by various volunteers and is still developed and maintained on a volunteer basis. Jam is a front-end for JoinMarket , a privacy-focused bitcoin software that uses a peer-to-peer marketplace to facilitate collaborative transactions. The name \"Jam\" is a backronym, stands for JoinMarket's Awesome, Man , and shouldn't be taken too seriously.","title":"About"},{"location":"contribute/","text":"Contributing There are many ways you can contribute: testing, sharing ideas, writing documentation, creating tutorials, and\u2014of course\u2014writing code. Say Hello It doesn't hurt to say hi and connect with the people that are already working on Jam, or have worked on it in the past. Matrix Room Telegram Chat Study the Basics Identity and privacy are complex topics in general, and Bitcoin privacy is particularly tricky. Make sure to familiarise yourself with the basics before you get involved. Privacy Fundamentals Bitcoin Wiki: Privacy Understand the Philosophy Before you really get going you should understand the philosophy behind Motivation A Cypherpunk's Manifesto What to Work On While a very rough roadmap and some milestones exist, it's usually best to \"scratch your own itch.\" Found a bug? Fix it! Have a proposal to make something better? Create an issue! Found a typo? Fix it! Is Jam not available in your language? Translate it! It can be daunting to get started, but Jam, like every software project, is just code & design & text. Code : review a pull request or work on some open issues . Small tasks that are relatively easy to do will have the \" good first issue \" label. GitHub issues Pull Requests Good first issues Design : have a look at the Figma files , comment on them, or propose a change. Figma Text : if you're good with words and copy editing, or if you want to help to translate Jam into multiple languages, join the translation team . Translations Just Get Started! Since all development happens out in the open and there are no gatekeepers, getting involved is as easy as showing up. Feel free to create an issue , review or open up a pull-request , or join one of the community calls . This is a free and open-source software project and we love receiving pull-requests, bug reports, ideas, and feedback from everyone. See the CONTRIBUTING.md file on GitHub for more details on how to get started participating in this project.","title":"Contributing"},{"location":"contribute/#contributing","text":"There are many ways you can contribute: testing, sharing ideas, writing documentation, creating tutorials, and\u2014of course\u2014writing code.","title":"Contributing"},{"location":"contribute/#say-hello","text":"It doesn't hurt to say hi and connect with the people that are already working on Jam, or have worked on it in the past. Matrix Room Telegram Chat","title":"Say Hello"},{"location":"contribute/#study-the-basics","text":"Identity and privacy are complex topics in general, and Bitcoin privacy is particularly tricky. Make sure to familiarise yourself with the basics before you get involved. Privacy Fundamentals Bitcoin Wiki: Privacy","title":"Study the Basics"},{"location":"contribute/#understand-the-philosophy","text":"Before you really get going you should understand the philosophy behind Motivation A Cypherpunk's Manifesto","title":"Understand the Philosophy"},{"location":"contribute/#what-to-work-on","text":"While a very rough roadmap and some milestones exist, it's usually best to \"scratch your own itch.\" Found a bug? Fix it! Have a proposal to make something better? Create an issue! Found a typo? Fix it! Is Jam not available in your language? Translate it! It can be daunting to get started, but Jam, like every software project, is just code & design & text. Code : review a pull request or work on some open issues . Small tasks that are relatively easy to do will have the \" good first issue \" label. GitHub issues Pull Requests Good first issues Design : have a look at the Figma files , comment on them, or propose a change. Figma Text : if you're good with words and copy editing, or if you want to help to translate Jam into multiple languages, join the translation team . Translations","title":"What to Work On"},{"location":"contribute/#just-get-started","text":"Since all development happens out in the open and there are no gatekeepers, getting involved is as easy as showing up. Feel free to create an issue , review or open up a pull-request , or join one of the community calls . This is a free and open-source software project and we love receiving pull-requests, bug reports, ideas, and feedback from everyone. See the CONTRIBUTING.md file on GitHub for more details on how to get started participating in this project.","title":"Just Get Started!"},{"location":"glossary/","text":"Glossary TODO Maker Taker Jar Fidelity Bond Schedule UTXO onchain doxxic change mempool etc.","title":"Glossary"},{"location":"glossary/#glossary","text":"TODO Maker Taker Jar Fidelity Bond Schedule UTXO onchain doxxic change mempool etc.","title":"Glossary"},{"location":"interface/00-cheatsheet/","text":"Cheat Sheet TODO First Use Fund your wallet Schedule transactions Create a fidelity bond Earn yield by providing liquidity Send a collaborative transaction Rinse and repeat! Receive TODO Jam TODO Fidelity Bond TODO Earn TODO Send TODO","title":"Cheat Sheet"},{"location":"interface/00-cheatsheet/#cheat-sheet","text":"TODO","title":"Cheat Sheet"},{"location":"interface/00-cheatsheet/#first-use","text":"Fund your wallet Schedule transactions Create a fidelity bond Earn yield by providing liquidity Send a collaborative transaction Rinse and repeat!","title":"First Use"},{"location":"interface/00-cheatsheet/#receive","text":"TODO","title":"Receive"},{"location":"interface/00-cheatsheet/#jam","text":"TODO","title":"Jam"},{"location":"interface/00-cheatsheet/#fidelity-bond","text":"TODO","title":"Fidelity Bond"},{"location":"interface/00-cheatsheet/#earn","text":"TODO","title":"Earn"},{"location":"interface/00-cheatsheet/#send","text":"TODO","title":"Send"},{"location":"interface/01-receive/","text":"Receive TODO","title":"Receive"},{"location":"interface/01-receive/#receive","text":"TODO","title":"Receive"},{"location":"interface/02-jam/","text":"Jam TODO","title":"Jam"},{"location":"interface/02-jam/#jam","text":"TODO","title":"Jam"},{"location":"interface/03-earn/","text":"Earn TODO","title":"Earn"},{"location":"interface/03-earn/#earn","text":"TODO","title":"Earn"},{"location":"interface/04-send/","text":"Send TODO","title":"Send"},{"location":"interface/04-send/#send","text":"TODO","title":"Send"},{"location":"interface/fidelity-bonds/","text":"Fidelity Bonds TODO","title":"Fidelity Bonds"},{"location":"interface/fidelity-bonds/#fidelity-bonds","text":"TODO","title":"Fidelity Bonds"},{"location":"market/fees/","text":"Fees TODO All fees are denominated in sats. Use one of the tools below to convert them to fiat: Sats converter Bitkoin.io","title":"Fees"},{"location":"market/fees/#fees","text":"TODO All fees are denominated in sats. Use one of the tools below to convert them to fiat: Sats converter Bitkoin.io","title":"Fees"},{"location":"market/orderbook/","text":"Orderbook TODO nixbitcoin","title":"Orderbook"},{"location":"market/orderbook/#orderbook","text":"TODO nixbitcoin","title":"Orderbook"},{"location":"philosophy/00-motivation/","text":"Motivation There is a sacred realm of privacy for every man and woman where he makes his choices and decisions\u2009\u2014\u2009a realm of his own essen\u00adtial rights and liber\u00adties into which the law, gener\u00adally speaking, must not intrude. Geoffrey Fisher, Archbishop of Canter\u00adbury (1959) TODO Why care about privacy? Why use Jam? Why Care About Privacy? \"Privacy is neces\u00adsary for an open society in the electronic age. Privacy is not secrecy. A private matter is something one doesn't want the whole world to know, but a secret matter is something one doesn't want anybody to know. Privacy is the power to selec\u00adtively reveal oneself to the world.\" Eric Hughes With these powerful words Eric Hughes opened his Cypher\u00adpunk's Manifesto in 1993. The differ\u00adence between privacy and secrecy is subtle, but impor\u00adtant. Choosing to remain private does not imply that one has secrets or has something to hide. To illus\u00adtrate this just realize that what you do on the toilet or in the bedroom is neither illegal nor a secret (in most cases), yet you close the door and pull the curtains. Similarly, how much money you have and where you spend it is not neces\u00adsarily a secret matter. It should, however, be a private one. Most would agree that your boss should not know how you choose to spend your salary. The impor\u00adtance of privacy is recog\u00adnized by many inter\u00adna\u00adtional bodies. From the American Decla\u00adra\u00adtion of the Rights and Duties of Man to the United Nations, it is recog\u00adnized that privacy is a funda\u00admental human right worldwide. No one shall be subjected to arbitrary inter\u00adfer\u00adence with his privacy, family, home or corre\u00adspon\u00addence, nor to attacks upon his honour and reputa\u00adtion. Everyone has the right to the protec\u00adtion of the law against such inter\u00adfer\u00adence or attacks. Article 12, United Nations Decla\u00adra\u00adtion of Human Rights Although Bitcoin was often described as an anony\u00admous method of payment by early propo\u00adnents and by the media, it is anything but. Bitcoin is pseudo\u00adny\u00admous at best and as of today making sure that your pseudo\u00adny\u00admous bitcoin identi\u00adties cannot be linked to your real-world identity proves diffi\u00adcult for most people. Bitcoin is an open system. Its public ledger can be inspected and studied by everyone. Thus every trans\u00adac\u00adtion that is embedded in its proof-of-work chain will be exposed for as long as Bitcoin exists: eternity. Failing to follow privacy best practices now can poten\u00adtially have negative reper\u00adcus\u00adsions in the future. Privacy, like security, is a process and it is diffi\u00adcult, but not impos\u00adsible. Tools continue to be devel\u00adoped to help preserve privacy while using Bitcoin and fortu\u00adnately most of these tools become easier to use over time. Unfor\u00adtu\u00adnately no panacea exists. One has to remain aware of the trade\u00adoffs and follow best practices as they evolve. Why Jam? Jam is a front-end for JoinMarket , a privacy-focused bitcoin software that uses a peer-to-peer marketplace to facilitate collaborative transactions. A collaborative transaction, as the name implies, is a bitcoin transaction that is done collaboratively by multiple parties. The tricky part of getting a collaborative transactions done is not technical, but social. It is a problem of matchmaking, timing, and trust. Usually, this problem is solved with a central coordinator. JoinMarket takes a different approach. It allows participants to propose collaborative transactions to others, creating an open market of buyers and sellers, which removes the central coordinator from the equation.","title":"Motivation"},{"location":"philosophy/00-motivation/#motivation","text":"There is a sacred realm of privacy for every man and woman where he makes his choices and decisions\u2009\u2014\u2009a realm of his own essen\u00adtial rights and liber\u00adties into which the law, gener\u00adally speaking, must not intrude. Geoffrey Fisher, Archbishop of Canter\u00adbury (1959) TODO Why care about privacy? Why use Jam?","title":"Motivation"},{"location":"philosophy/00-motivation/#why-care-about-privacy","text":"\"Privacy is neces\u00adsary for an open society in the electronic age. Privacy is not secrecy. A private matter is something one doesn't want the whole world to know, but a secret matter is something one doesn't want anybody to know. Privacy is the power to selec\u00adtively reveal oneself to the world.\" Eric Hughes With these powerful words Eric Hughes opened his Cypher\u00adpunk's Manifesto in 1993. The differ\u00adence between privacy and secrecy is subtle, but impor\u00adtant. Choosing to remain private does not imply that one has secrets or has something to hide. To illus\u00adtrate this just realize that what you do on the toilet or in the bedroom is neither illegal nor a secret (in most cases), yet you close the door and pull the curtains. Similarly, how much money you have and where you spend it is not neces\u00adsarily a secret matter. It should, however, be a private one. Most would agree that your boss should not know how you choose to spend your salary. The impor\u00adtance of privacy is recog\u00adnized by many inter\u00adna\u00adtional bodies. From the American Decla\u00adra\u00adtion of the Rights and Duties of Man to the United Nations, it is recog\u00adnized that privacy is a funda\u00admental human right worldwide. No one shall be subjected to arbitrary inter\u00adfer\u00adence with his privacy, family, home or corre\u00adspon\u00addence, nor to attacks upon his honour and reputa\u00adtion. Everyone has the right to the protec\u00adtion of the law against such inter\u00adfer\u00adence or attacks. Article 12, United Nations Decla\u00adra\u00adtion of Human Rights Although Bitcoin was often described as an anony\u00admous method of payment by early propo\u00adnents and by the media, it is anything but. Bitcoin is pseudo\u00adny\u00admous at best and as of today making sure that your pseudo\u00adny\u00admous bitcoin identi\u00adties cannot be linked to your real-world identity proves diffi\u00adcult for most people. Bitcoin is an open system. Its public ledger can be inspected and studied by everyone. Thus every trans\u00adac\u00adtion that is embedded in its proof-of-work chain will be exposed for as long as Bitcoin exists: eternity. Failing to follow privacy best practices now can poten\u00adtially have negative reper\u00adcus\u00adsions in the future. Privacy, like security, is a process and it is diffi\u00adcult, but not impos\u00adsible. Tools continue to be devel\u00adoped to help preserve privacy while using Bitcoin and fortu\u00adnately most of these tools become easier to use over time. Unfor\u00adtu\u00adnately no panacea exists. One has to remain aware of the trade\u00adoffs and follow best practices as they evolve.","title":"Why Care About Privacy?"},{"location":"philosophy/00-motivation/#why-jam","text":"Jam is a front-end for JoinMarket , a privacy-focused bitcoin software that uses a peer-to-peer marketplace to facilitate collaborative transactions. A collaborative transaction, as the name implies, is a bitcoin transaction that is done collaboratively by multiple parties. The tricky part of getting a collaborative transactions done is not technical, but social. It is a problem of matchmaking, timing, and trust. Usually, this problem is solved with a central coordinator. JoinMarket takes a different approach. It allows participants to propose collaborative transactions to others, creating an open market of buyers and sellers, which removes the central coordinator from the equation.","title":"Why Jam?"},{"location":"philosophy/01-free-software/","text":"Free Software TODO","title":"Free Software"},{"location":"philosophy/01-free-software/#free-software","text":"TODO","title":"Free Software"},{"location":"philosophy/02-bitcoin/","text":"Bitcoin TODO","title":"Bitcoin"},{"location":"philosophy/02-bitcoin/#bitcoin","text":"TODO","title":"Bitcoin"},{"location":"philosophy/03-joinmarket/","text":"JoinMarket TODO","title":"JoinMarket"},{"location":"philosophy/03-joinmarket/#joinmarket","text":"TODO","title":"JoinMarket"},{"location":"privacy/01-fundamentals/","text":"Fundamentals When it comes to Bitcoin, misconceptions abound. This is not surprising. Bitcoin is a new thing, and, consequently, all metaphors and comparisons fall short, in one way or another. One misconception is that Bitcoin is private and untraceable. In actuality, regular Bitcoin use often has weaker privacy guarantees than using the traditional banking system, as Gregory Maxwell pointed out many years ago: \u201cYour inlaws can see that you're buying birth control that deprives them of grandchildren, your employer learns about the non-profits you support with money from your paycheck, and thieves see your latest purchases and how wealthy you are which helps them target and scam you. Poor privacy in Bitcoin can be a major practical disadvantage for both individuals and businesses.\u201d To understand why this is, we have to understand how Bitcoin operates. This, however, turns out to be very difficult. To understand one part, one needs to have a solid understanding of computer science and cryptography. To understand another part, one needs to have a solid understanding of economics and game theory\u2014not to mention money, networks, governance, energy and energy markets, monetary history, and so on. The list of relevant disciplines is almost endless. However, it is possible to look at some parts of Bitcoin in isolation and\u2014hopefully\u2014gain a better understanding by zooming in. One such part is the Bitcoin transaction. The Bitcoin Transaction In the simplest sense, a Bitcoin transaction is just a bunch of data that describes the movement of bitcoins. A bitcoin transaction consists of inputs and outputs. Every transaction input refers to the output of a previous transaction. We say that an input \"consumes\" an output. If an output is not consumed yet, we speak of an unspent transaction output, or UTXO, for short. Once properly understood, it is easy to see what the Bitcoin network generates: a linked data structure that, starting from a common root\u2014the genesis block\u2014splits and combines bundles of sats as time goes on. Properly visualized, it would look a bit like an upside-down tree. Every transaction has at least one input and at least one output. The simplest and traditionally most common transaction type has one input and two outputs: one describing the actual payment and one describing the change that goes back to the one who initiated the payment. The concept of change is required because Bitcoin doesn't allow an update of the past. It is an append-only log, so instead of going back and modifying past entries, new entries have to be created to reflect any updates. Transactions are what create these updates. For a simple transaction, one new \"entry\" is created to update the balance of the receiver, and one new entry is created to update your own balance. You can think of it as paying for something that costs $5 with a $20 bill. The merchant receives five dollars, and you get $15\u2014the change\u2014back. However, we don't have physical coins and bills, we only have an append-only log. So instead of bills of smaller denominations, new entries\u2014new UTXOs\u2014are created. While this design is ingenious when it comes to validation\u2014you can easily make sure that everything adds up at all times\u2014there are certain nuances to consider when it comes to privacy. For example, if it is trivial to determine which output is a change output and which one isn't, it is trivial to cluster outputs and thus identify not only the flow of funds, but also who transacted with whom, at what times, and\u2014of course\u2014the amounts that were transacted. Imagine a data leak that exposes all transactions of every company, every individual, every politician, every bank, every merchant, every online shop, and every vending machine. When used naively, this data leak is Bitcoin. Luckily, the situation is not as grim as it sounds. Developments and techniques exist to remedy this situation. To understand them, we have to understand the various transaction types that Bitcoin allows. Bitcoin Transaction Types We already discussed the most common transaction type: the \"simple spend.\" There are also transactions that have only one input and one output, transactions that have multiple inputs and one output, and transactions that have multiple inputs and multiple outputs. Let's call them \"No Change,\" \"Consolidation,\" and \"Batch,\" respectively. While Bitcoin's transaction graph is public, it is important to point out that any analysis that is applied to this data is heuristic. For example, a user might create a transaction that splits a UTXO in half, resulting in two outputs that belong to the same entity. Or, to pick another example, a regular spend might produce two outputs that are exactly equal, making change detection virtually impossible. Because identification can only happen heuristically, one part of the solution to Bitcoin's privacy conundrum lies in collaboration. Collaborative Transactions When it comes to privacy, collaboration is the norm. Take encryption, for example. If you want to have a secure communications channel with another party, you start a collaborative process. You meet, you exchange secret information, and you use this secret information to encrypt your messages. We call this exchange of secret information a \"handshake,\" and over the last decades, we implemented all kinds of handshakes into our communication and networking protocols to make sure that bad actors can't eavesdrop on our communications. Similarly, cryptographers and security researchers are currently working on protocols and techniques that make sure that bad actors can't eavesdrop on your every financial move. As with end-to-end encryption, these protections are important for all and a matter of life-and-death for some. Dissidents, journalists, whistleblowers, political activists\u2014these are only a few groups of people that depend on secure communications, which includes financial communication. That privacy is important for these groups is an understatement. It is absolutely essential. This is also why the Human Rights Foundation launched a fund to support software developers who are making the Bitcoin network more private, decentralized, and resilient. So, how can we think about a \"handshake\" in the world of bitcoin transactions? It's quite simple, really. As mentioned above, a bitcoin transaction can have multiple inputs and multiple outputs. The privacy techniques that are currently being developed are making use of this feature. The interesting part is that not all inputs have to be controlled by the same party. Thus, the \"handshake\" is about bringing multiple parties together to collaborate on a bitcoin transaction. Once the collaborating parties agree on the parameters of the transaction, the transaction is signed by all parties and broadcast to the network. Because of the heuristical nature of transaction analysis, an onlooker won't be able to figure out the flow of funds. One especially promising technique to increase the privacy of all is to combine the above with an actual payment. In this scenario, the \"handshake\" is about bringing a merchant and a customer together to craft a special transaction that can only be deciphered by said merchant or customer. An eavesdropper is left with multiple interpretations of the transaction, each equally likely. Such a transaction is called a \u201c PayJoin .\u201d Even if only a small percentage of transactions are PayJoin transactions, the privacy of all participants in the network is increased substantially. As more wallets and merchants adopt and support these privacy features, we will see a substantial increase in privacy on Bitcoin's base layer. However, as we have seen with the adoption of Transport Layer Security on the Internet, it takes some time for an upgrade of this sort to be implemented and embraced. Transport Layer Security When the internet was a new thing, we didn't think that it would envelop all our communications and all our lives. Encryption was an afterthought. After a while, however, we figured out that having all our communications available in plain text, readable by everyone who had the interest and technical proficiency to do so, wasn't a terribly good idea. Consequently, we made a concerted effort to change things. We upgraded from HTTP to HTTPS and from plain text messages to end-to-end encryption. While this switch isn\u2019t 100% complete yet, encrypted communication became the default over time. This upgrade took a long time, since, similar to Bitcoin, nobody is in charge of the internet. TODO","title":"Fundamentals"},{"location":"privacy/01-fundamentals/#fundamentals","text":"When it comes to Bitcoin, misconceptions abound. This is not surprising. Bitcoin is a new thing, and, consequently, all metaphors and comparisons fall short, in one way or another. One misconception is that Bitcoin is private and untraceable. In actuality, regular Bitcoin use often has weaker privacy guarantees than using the traditional banking system, as Gregory Maxwell pointed out many years ago: \u201cYour inlaws can see that you're buying birth control that deprives them of grandchildren, your employer learns about the non-profits you support with money from your paycheck, and thieves see your latest purchases and how wealthy you are which helps them target and scam you. Poor privacy in Bitcoin can be a major practical disadvantage for both individuals and businesses.\u201d To understand why this is, we have to understand how Bitcoin operates. This, however, turns out to be very difficult. To understand one part, one needs to have a solid understanding of computer science and cryptography. To understand another part, one needs to have a solid understanding of economics and game theory\u2014not to mention money, networks, governance, energy and energy markets, monetary history, and so on. The list of relevant disciplines is almost endless. However, it is possible to look at some parts of Bitcoin in isolation and\u2014hopefully\u2014gain a better understanding by zooming in. One such part is the Bitcoin transaction.","title":"Fundamentals"},{"location":"privacy/01-fundamentals/#the-bitcoin-transaction","text":"In the simplest sense, a Bitcoin transaction is just a bunch of data that describes the movement of bitcoins. A bitcoin transaction consists of inputs and outputs. Every transaction input refers to the output of a previous transaction. We say that an input \"consumes\" an output. If an output is not consumed yet, we speak of an unspent transaction output, or UTXO, for short. Once properly understood, it is easy to see what the Bitcoin network generates: a linked data structure that, starting from a common root\u2014the genesis block\u2014splits and combines bundles of sats as time goes on. Properly visualized, it would look a bit like an upside-down tree. Every transaction has at least one input and at least one output. The simplest and traditionally most common transaction type has one input and two outputs: one describing the actual payment and one describing the change that goes back to the one who initiated the payment. The concept of change is required because Bitcoin doesn't allow an update of the past. It is an append-only log, so instead of going back and modifying past entries, new entries have to be created to reflect any updates. Transactions are what create these updates. For a simple transaction, one new \"entry\" is created to update the balance of the receiver, and one new entry is created to update your own balance. You can think of it as paying for something that costs $5 with a $20 bill. The merchant receives five dollars, and you get $15\u2014the change\u2014back. However, we don't have physical coins and bills, we only have an append-only log. So instead of bills of smaller denominations, new entries\u2014new UTXOs\u2014are created. While this design is ingenious when it comes to validation\u2014you can easily make sure that everything adds up at all times\u2014there are certain nuances to consider when it comes to privacy. For example, if it is trivial to determine which output is a change output and which one isn't, it is trivial to cluster outputs and thus identify not only the flow of funds, but also who transacted with whom, at what times, and\u2014of course\u2014the amounts that were transacted. Imagine a data leak that exposes all transactions of every company, every individual, every politician, every bank, every merchant, every online shop, and every vending machine. When used naively, this data leak is Bitcoin. Luckily, the situation is not as grim as it sounds. Developments and techniques exist to remedy this situation. To understand them, we have to understand the various transaction types that Bitcoin allows.","title":"The Bitcoin Transaction"},{"location":"privacy/01-fundamentals/#bitcoin-transaction-types","text":"We already discussed the most common transaction type: the \"simple spend.\" There are also transactions that have only one input and one output, transactions that have multiple inputs and one output, and transactions that have multiple inputs and multiple outputs. Let's call them \"No Change,\" \"Consolidation,\" and \"Batch,\" respectively. While Bitcoin's transaction graph is public, it is important to point out that any analysis that is applied to this data is heuristic. For example, a user might create a transaction that splits a UTXO in half, resulting in two outputs that belong to the same entity. Or, to pick another example, a regular spend might produce two outputs that are exactly equal, making change detection virtually impossible. Because identification can only happen heuristically, one part of the solution to Bitcoin's privacy conundrum lies in collaboration.","title":"Bitcoin Transaction Types"},{"location":"privacy/01-fundamentals/#collaborative-transactions","text":"When it comes to privacy, collaboration is the norm. Take encryption, for example. If you want to have a secure communications channel with another party, you start a collaborative process. You meet, you exchange secret information, and you use this secret information to encrypt your messages. We call this exchange of secret information a \"handshake,\" and over the last decades, we implemented all kinds of handshakes into our communication and networking protocols to make sure that bad actors can't eavesdrop on our communications. Similarly, cryptographers and security researchers are currently working on protocols and techniques that make sure that bad actors can't eavesdrop on your every financial move. As with end-to-end encryption, these protections are important for all and a matter of life-and-death for some. Dissidents, journalists, whistleblowers, political activists\u2014these are only a few groups of people that depend on secure communications, which includes financial communication. That privacy is important for these groups is an understatement. It is absolutely essential. This is also why the Human Rights Foundation launched a fund to support software developers who are making the Bitcoin network more private, decentralized, and resilient. So, how can we think about a \"handshake\" in the world of bitcoin transactions? It's quite simple, really. As mentioned above, a bitcoin transaction can have multiple inputs and multiple outputs. The privacy techniques that are currently being developed are making use of this feature. The interesting part is that not all inputs have to be controlled by the same party. Thus, the \"handshake\" is about bringing multiple parties together to collaborate on a bitcoin transaction. Once the collaborating parties agree on the parameters of the transaction, the transaction is signed by all parties and broadcast to the network. Because of the heuristical nature of transaction analysis, an onlooker won't be able to figure out the flow of funds. One especially promising technique to increase the privacy of all is to combine the above with an actual payment. In this scenario, the \"handshake\" is about bringing a merchant and a customer together to craft a special transaction that can only be deciphered by said merchant or customer. An eavesdropper is left with multiple interpretations of the transaction, each equally likely. Such a transaction is called a \u201c PayJoin .\u201d Even if only a small percentage of transactions are PayJoin transactions, the privacy of all participants in the network is increased substantially. As more wallets and merchants adopt and support these privacy features, we will see a substantial increase in privacy on Bitcoin's base layer. However, as we have seen with the adoption of Transport Layer Security on the Internet, it takes some time for an upgrade of this sort to be implemented and embraced.","title":"Collaborative Transactions"},{"location":"privacy/01-fundamentals/#transport-layer-security","text":"When the internet was a new thing, we didn't think that it would envelop all our communications and all our lives. Encryption was an afterthought. After a while, however, we figured out that having all our communications available in plain text, readable by everyone who had the interest and technical proficiency to do so, wasn't a terribly good idea. Consequently, we made a concerted effort to change things. We upgraded from HTTP to HTTPS and from plain text messages to end-to-end encryption. While this switch isn\u2019t 100% complete yet, encrypted communication became the default over time. This upgrade took a long time, since, similar to Bitcoin, nobody is in charge of the internet. TODO","title":"Transport Layer Security"},{"location":"privacy/02-best-practices/","text":"Best Practices As with every\u00adthing in Bitcoin, taking control of your privacy is a gradual, step-by-step process. Learning about and imple\u00admenting these best practices takes patience and respon\u00adsi\u00adbility, so do not be discour\u00adaged if it seems overwhelming at first. Every step, no matter how small, is a step in the right direction. Take Action The following are action\u00adable steps you can take to increase your privacy: Self-custody your coins Do not reuse addresses Minimize exposure to KYC (Know Your Customer) Minimize exposure to third parties Run your own node Use the Light\u00adning Network for small transactions Do not use public block explorers CoinJoin early and often Self-custody your coins Not your keys, not your bitcoin. If someone else is holding your bitcoin for you, they know every\u00adthing there is to know about these coins: amounts, trans\u00adac\u00adtion histo\u00adries, future trans\u00adac\u00adtions, etc. Taking self-custody of your coins is the first and most essen\u00adtial step. Do not reuse addresses Reusing addresses destroys the privacy of both the sender and the receiver. It should be avoided at all costs. Minimize exposure to KYC Linking your real-world identity to your bitcoin addresses is a neces\u00adsary evil in most juris\u00addic\u00adtions. While the effec\u00adtive\u00adness of these regula\u00adtions is question\u00adable, the impli\u00adca\u00adtions for regular users are mostly negative as a multi\u00adtude of data leaks have shown. If you choose to use KYC on- or off-ramps, make sure that you under\u00adstand the relation\u00adship between yourself and the service in question. You are trusting this service with your personal data, including the future safety of this data. If you still earn fiat-denom\u00adi\u00adnated income, we recom\u00admend using one bitcoin-only service that allows you to execute automatic recur\u00adring buys on your behalf. Swan Bitcoin is such a service. If you want to skip KYC entirely, have a look at no-KYC only . Minimize exposure to third parties Trusted third parties are security holes . If you can rely on yourself instead of trusted third parties, you should. Run your own node Not your node, not your rules. Running your own node is essen\u00adtial to use Bitcoin in a private manner. Every inter\u00adac\u00adtion with the Bitcoin network is facil\u00adi\u00adtated by a node. If you are not in control of this node, whatever you are doing is seen by the node you are inter\u00adacting with. This means whoever is in control of the node is able to see what you are doing. This node guide is a great resource to get you started. Use the Light\u00adning Network for small trans\u00adac\u00adtions The off-chain nature of the light\u00adning network increases the trans\u00adac\u00adtional privacy of its users without having to jump through too many hoops. While it is still early, the absolutely reckless days of the light\u00adning network are likely behind us. Using it for small- and medium-sized trans\u00adac\u00adtions can help improve both your privacy as well as your fee footprint. Do not use public block explorers Looking up addresses in public block explorers will link those addresses with your IP, which, in turn, can be linked to your real identity. Software packages like Umbrel and myNode make it easy to run your own block explorer. If you have to use a public block explorer, make sure to mask your IP by connecting to them via Tor , or at least use a VPN . CoinJoin early and often Because Bitcoin is forever, using trans\u00adac\u00adtional best practices such as collab\u00ado\u00adra\u00adtive CoinJoin trans\u00adac\u00adtions will ensure that your privacy is protected going forward. While CoinJoin trans\u00adac\u00adtions are nuanced, user-friendly software exists to help you create and automate these kinds of trans\u00adac\u00adtions. Samourai's Whirlpool is a good solution for Android users, for example. There is also JoinMarket, which, thanks to projects like JoininBox and Jam , can be set up quite easily on your own node. The above is a slightly modified version of Bitcoin Privacy: Best Practices\" by Gigi, released under a CC BY-SA 4.0 license .","title":"Best Practices"},{"location":"privacy/02-best-practices/#best-practices","text":"As with every\u00adthing in Bitcoin, taking control of your privacy is a gradual, step-by-step process. Learning about and imple\u00admenting these best practices takes patience and respon\u00adsi\u00adbility, so do not be discour\u00adaged if it seems overwhelming at first. Every step, no matter how small, is a step in the right direction.","title":"Best Practices"},{"location":"privacy/02-best-practices/#take-action","text":"The following are action\u00adable steps you can take to increase your privacy: Self-custody your coins Do not reuse addresses Minimize exposure to KYC (Know Your Customer) Minimize exposure to third parties Run your own node Use the Light\u00adning Network for small transactions Do not use public block explorers CoinJoin early and often","title":"Take Action"},{"location":"privacy/02-best-practices/#self-custody-your-coins","text":"Not your keys, not your bitcoin. If someone else is holding your bitcoin for you, they know every\u00adthing there is to know about these coins: amounts, trans\u00adac\u00adtion histo\u00adries, future trans\u00adac\u00adtions, etc. Taking self-custody of your coins is the first and most essen\u00adtial step.","title":"Self-custody your coins"},{"location":"privacy/02-best-practices/#do-not-reuse-addresses","text":"Reusing addresses destroys the privacy of both the sender and the receiver. It should be avoided at all costs.","title":"Do not reuse addresses"},{"location":"privacy/02-best-practices/#minimize-exposure-to-kyc","text":"Linking your real-world identity to your bitcoin addresses is a neces\u00adsary evil in most juris\u00addic\u00adtions. While the effec\u00adtive\u00adness of these regula\u00adtions is question\u00adable, the impli\u00adca\u00adtions for regular users are mostly negative as a multi\u00adtude of data leaks have shown. If you choose to use KYC on- or off-ramps, make sure that you under\u00adstand the relation\u00adship between yourself and the service in question. You are trusting this service with your personal data, including the future safety of this data. If you still earn fiat-denom\u00adi\u00adnated income, we recom\u00admend using one bitcoin-only service that allows you to execute automatic recur\u00adring buys on your behalf. Swan Bitcoin is such a service. If you want to skip KYC entirely, have a look at no-KYC only .","title":"Minimize exposure to KYC"},{"location":"privacy/02-best-practices/#minimize-exposure-to-third-parties","text":"Trusted third parties are security holes . If you can rely on yourself instead of trusted third parties, you should.","title":"Minimize exposure to third parties"},{"location":"privacy/02-best-practices/#run-your-own-node","text":"Not your node, not your rules. Running your own node is essen\u00adtial to use Bitcoin in a private manner. Every inter\u00adac\u00adtion with the Bitcoin network is facil\u00adi\u00adtated by a node. If you are not in control of this node, whatever you are doing is seen by the node you are inter\u00adacting with. This means whoever is in control of the node is able to see what you are doing. This node guide is a great resource to get you started.","title":"Run your own node"},{"location":"privacy/02-best-practices/#use-the-lightning-network-for-small-transactions","text":"The off-chain nature of the light\u00adning network increases the trans\u00adac\u00adtional privacy of its users without having to jump through too many hoops. While it is still early, the absolutely reckless days of the light\u00adning network are likely behind us. Using it for small- and medium-sized trans\u00adac\u00adtions can help improve both your privacy as well as your fee footprint.","title":"Use the Light\u00adning Network for small trans\u00adac\u00adtions"},{"location":"privacy/02-best-practices/#do-not-use-public-block-explorers","text":"Looking up addresses in public block explorers will link those addresses with your IP, which, in turn, can be linked to your real identity. Software packages like Umbrel and myNode make it easy to run your own block explorer. If you have to use a public block explorer, make sure to mask your IP by connecting to them via Tor , or at least use a VPN .","title":"Do not use public block explorers"},{"location":"privacy/02-best-practices/#coinjoin-early-and-often","text":"Because Bitcoin is forever, using trans\u00adac\u00adtional best practices such as collab\u00ado\u00adra\u00adtive CoinJoin trans\u00adac\u00adtions will ensure that your privacy is protected going forward. While CoinJoin trans\u00adac\u00adtions are nuanced, user-friendly software exists to help you create and automate these kinds of trans\u00adac\u00adtions. Samourai's Whirlpool is a good solution for Android users, for example. There is also JoinMarket, which, thanks to projects like JoininBox and Jam , can be set up quite easily on your own node. The above is a slightly modified version of Bitcoin Privacy: Best Practices\" by Gigi, released under a CC BY-SA 4.0 license .","title":"CoinJoin early and often"},{"location":"software/installation/","text":"Installation Jam can be installed as an app / service / plug-in with: Raspiblitz Umbrel Citadel BTCPay Server You should be able to install Jam with one click if you are running any of the above. You can also do a manual installation. Install as a Package TODO with Raspiblitz TODO with Umbrel TODO with Citadel TODO with BTCPay Server TODO Manual Installation TODO","title":"Installation"},{"location":"software/installation/#installation","text":"Jam can be installed as an app / service / plug-in with: Raspiblitz Umbrel Citadel BTCPay Server You should be able to install Jam with one click if you are running any of the above. You can also do a manual installation.","title":"Installation"},{"location":"software/installation/#install-as-a-package","text":"TODO","title":"Install as a Package"},{"location":"software/installation/#with-raspiblitz","text":"TODO","title":"with Raspiblitz"},{"location":"software/installation/#with-umbrel","text":"TODO","title":"with Umbrel"},{"location":"software/installation/#with-citadel","text":"TODO","title":"with Citadel"},{"location":"software/installation/#with-btcpay-server","text":"TODO","title":"with BTCPay Server"},{"location":"software/installation/#manual-installation","text":"TODO","title":"Manual Installation"},{"location":"software/license/","text":"License Both Jam and JoinMarket are released under free and open-source software licenses. Jam Jam and its documentation is licensed under the MIT License . Jam LICENSE JamDocs LICENSE JoinMarket JoinMarket is released under the GPLv3 . JoinMarket LICENSE","title":"License"},{"location":"software/license/#license","text":"Both Jam and JoinMarket are released under free and open-source software licenses.","title":"License"},{"location":"software/license/#jam","text":"Jam and its documentation is licensed under the MIT License . Jam LICENSE JamDocs LICENSE","title":"Jam"},{"location":"software/license/#joinmarket","text":"JoinMarket is released under the GPLv3 . JoinMarket LICENSE","title":"JoinMarket"},{"location":"software/verification/","text":"Verification All releases are signed by one of the Jam contributors . As of this writing ( 742,834 ), releases are signed with dergigi's PGP key which has the following fingerprint: 8198 A185 30A5 22A0 9561 2439 89C4 A25E 69A5 DE7F To verify a specific release, import the key curl https://dergigi.com/PGP.txt | gpg --import and verify the git tag of your local copy: git verify-tag v0.0.8 This should produce an output that contains \"good signature\" as well as the key fingerprint mentioned above: gpg: Signature made Di 28 Jun 11:39:34 2022 CEST gpg: using RSA key 8198A18530A522A09561243989C4A25E69A5DE7F gpg: Good signature from \"Gigi <dergigi@pm.me>\" [unknown] ... Primary key fingerprint: 8198 A185 30A5 22A0 9561 2439 89C4 A25E 69A5 DE7F You can also see that a release was signed properly by clicking on the verification tag on the releases page on GitHub.","title":"Verification"},{"location":"software/verification/#verification","text":"All releases are signed by one of the Jam contributors . As of this writing ( 742,834 ), releases are signed with dergigi's PGP key which has the following fingerprint: 8198 A185 30A5 22A0 9561 2439 89C4 A25E 69A5 DE7F To verify a specific release, import the key curl https://dergigi.com/PGP.txt | gpg --import and verify the git tag of your local copy: git verify-tag v0.0.8 This should produce an output that contains \"good signature\" as well as the key fingerprint mentioned above: gpg: Signature made Di 28 Jun 11:39:34 2022 CEST gpg: using RSA key 8198A18530A522A09561243989C4A25E69A5DE7F gpg: Good signature from \"Gigi <dergigi@pm.me>\" [unknown] ... Primary key fingerprint: 8198 A185 30A5 22A0 9561 2439 89C4 A25E 69A5 DE7F You can also see that a release was signed properly by clicking on the verification tag on the releases page on GitHub.","title":"Verification"}]}